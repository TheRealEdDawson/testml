#!/usr/bin/env testml-pl5


"Test command '{*command}'":
  *command.run-command == *output


===
--- command: testml
--- output(+)
usage:   testml <options...> [<testml-file>...]

    See 'man testml' for more help.

    Common commands:

      testml foo.tml
      testml --lang=python foo.tml
      testml --compile foo.tml
      testml --compile --print foo.tml
      testml --list
      testml --env
      testml --clean

    Options:

    -c, --compile         Compile a TestML file to the cache directory
    -e, --eval ...        Specify TestML input on command line
    -i, --input ...       Main input file (prepended to each file arg)
    -a, --all             Combine all input files into one text
    -p, --print           Print compiled TestML to stdout
    -l, --list            List all the TestML langauge/framework runners
    --env                 Show the TestML environment details
    --clean               Remove generated TestML files
    --version             Print TestML version
    -h, --help            Show the command summary

    -R, --run ...         TestML runner to use (see: testml --list)
    -B, --bridge ...      TestML bridge module to use
    -I, --lib ...         Directory path to find bridge modules
    -P, --path ...        Directory path to find test files and imports
    -M, --module ...      TestML runner module to use
    -C, --config ...      TestML config file

    -x, --debug           Print lots of debugging info

===
--- command: testml -h
--- ^output(+)

===
--- command: testml --help
--- ^output(+)

===
--- command: testml --version
--- output
TestML v0.3.0

===
--- command: testml -c -p test/runtime-tml/010-math.tml
--- output
{ "testml": "0.3.0",
  "code": [
    ["%<>",["*a","*b","*c"],
      ["==",
        [".",
          ["*","a"],
          ["add",
            ["*","b"]]],
        ["*","c"]]],
    ["%<>",["*b","*a","*c"],
      ["==",
        [".",
          ["*","b"],
          ["add",
            ["*","a"]]],
        ["*","c"]]],
    ["%<>",["*c","*a","*b"],
      ["==",
        [".",
          ["*","c"],
          ["sub",
            ["*","a"]]],
        ["*","b"]]],
    ["%<>",["*c","*b","*a"],
      ["==",
        [".",
          ["*","c"],
          ["sub",
            ["*","b"]]],
        ["*","a"]]]],
  "data": [
    { "label": "Test 1",
      "point": {
        "a": 111,
        "b": 222,
        "c": 333}},
    { "label": "Test 2",
      "point": {
        "a": 444,
        "b": 555,
        "c": 999}}]}

===
--- command: testml-perl5-tap test/runtime-tml/010-math.tml
--- output
ok 1 - Test 1
ok 2 - Test 2
ok 3 - Test 1
ok 4 - Test 2
ok 5 - Test 1
ok 6 - Test 2
ok 7 - Test 1
ok 8 - Test 2
1..8

===
--- command: TESTML_RUN=perl5-tap testml test/runtime-tml/010-math.tml
--- ^output

===
--- command: testml --run=perl5-tap test/runtime-tml/010-math.tml
--- ^output

===
--- command: testml -R perl5-tap test/runtime-tml/010-math.tml
--- ^output

===
--- command: TESTML_RUN=perl5-tap prove -v test/runtime-tml/010-math.tml
--- output
test/runtime-tml/010-math.tml ..
ok 1 - Test 1
ok 2 - Test 2
ok 3 - Test 1
ok 4 - Test 2
ok 5 - Test 1
ok 6 - Test 2
ok 7 - Test 1
ok 8 - Test 2
1..8
ok
All tests successful.
Result: PASS

===
--- command: testml-perl5-tap -e '1 == 1'
--- output
ok 1
1..1

===
--- command: test/cli-tml/a-test.t
--- output
ok 1
ok 2 - foo
1..2

===
--- command: testml test/cli-tml/a-test.t
--- ^output

===
--- command: testml -R perl5 test/cli-tml/a-test.t
--- ^output

===
--- command: testml -R perl5-tap test/cli-tml/a-test.t
--- ^output

===
--- command: testml --run=perl5-tap test/cli-tml/a-test.t
--- ^output

===
--- command: TESTML_RUN=perl5-tap testml test/cli-tml/a-test.t
--- ^output

===
--- command: testml-bash-tap -e '1 == 1'
--- output
ok 1
1..1

===
--- WHEN: Env:TESTML_HAS_LANG_COFFEE
--- command: testml-coffee-tap -e '1 == 1'
--- ^output

===
--- WHEN: Env:TESTML_HAS_LANG_NODE
--- command: testml-node-tap -e '1 == 1'
--- ^output

===
--- command: testml-perl5-tap -e '1 == 1'
--- ^output

===
--- WHEN: Env:TESTML_HAS_LANG_PERL6
--- command: testml-perl6-tap -e '1 == 1'
--- ^output

===
--- WHEN: Env:TESTML_HAS_LANG_PYTHON
--- command: testml-python-tap -e '1 == 1'
--- ^output

===
--- WHEN: Env:TESTML_HAS_LANG_RUBY
--- command: testml-ruby-tap -e '1 == 1'
--- ^output



# ===
# --- command: testml-perl5-tap -e 'Diff = True' -a a.tml b.tml c.tml
# --- output
# ok 1
# 1..1
